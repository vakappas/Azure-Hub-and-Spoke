{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vnetName": {
            "defaultValue": "myVnet",
            "type": "string"
        },
        "subnetName": {
            "defaultValue": "serverSubnet",
            "type": "string"
		},
        "storageAccountName": {
            "defaultValue": "[concat('storage',uniqueString(resourceGroup().id))]",
            "type": "string"
        },
        "adminUsername": {
            "defaultValue": null,
            "type": "string"
        },
        "adminPassword": {
            "defaultValue": null,
            "type": "securestring"
        },
        "vmName": {
            "defaultValue": "myvm",
            "type": "string"
        },
        "vmType": {
            "defaultValue": "ubuntu",
            "type": "string",
            "allowedValues": [
                "ubuntu",
                "csr",
                "vASA",
                "FTDv"
            ]
        },
        "vmSize": {
            "defaultValue": "Standard_B1s",
            "type": "string"
        },
        "createPip": {
            "defaultValue": "yes",
            "type": "string",
            "allowedValues": ["yes", "no"]
        }
    }, 
    "variables": {
        "networkApiVersion": "2018-04-01",
        "computeApiVersion": "2018-06-01",
        "storageApiVersion": "2018-07-01",
        "vmNicName": "[concat(parameters('vmName'),'-nic')]",
        "vmPipName": "[concat(parameters('vmName'),'-pip')]",
        "pipType": "Static",
        "pipSku": "Basic",
		"vmDiskName": "[concat(parameters('vmName'), '-disk')]",
		"vmDiskType": "Standard_LRS",
        "vmOsDiskSize": 32,
        "vmNicName": "[concat(parameters('vmName'), '-nic1')]",
        "vmNsgName": "[concat(parameters('vmName'), '-nsg')]",
        "skuDataTable": {
            "ubuntu": {
                "sku": "18.04-LTS",
                "publisher": "canonical",
                "offer": "UbuntuServer",
                "version": "latest",
                "size": "[parameters('vmSize')]"
            }
        },
        "skuData": "[variables('skuDataTable')[parameters('vmType')]]",
        "vmNsgRules": [
            {
                "name": "SSH",
                "properties": {
                    "priority": 1010,
                    "protocol": "TCP",
                    "access": "Allow",
                    "direction": "Inbound",
                    "sourceApplicationSecurityGroups": [],
                    "destinationApplicationSecurityGroups": [],
                    "sourceAddressPrefix": "*",
                    "sourcePortRange": "*",
                    "destinationAddressPrefix": "*",
                    "destinationPortRange": "22"
                }
            },
            {
                "name": "HTTPS",
                "properties": {
                    "priority": 1020,
                    "protocol": "TCP",
                    "access": "Allow",
                    "direction": "Inbound",
                    "sourceApplicationSecurityGroups": [],
                    "destinationApplicationSecurityGroups": [],
                    "sourceAddressPrefix": "*",
                    "sourcePortRange": "*",
                    "destinationAddressPrefix": "*",
                    "destinationPortRange": "443"
                }
            }
        ],
        "vmNsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('vmNsgName'))]",
        "vnetId": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
        "subnet1Ref": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
        
        "autoShutdownStatus": "Enabled",
        "autoShutdownTime": "19:00",
        "autoShutdownTimeZone": "Eastern Standard Time",
        "autoShutdownNotificationStatus": "Disabled",
        "autoShutdownNotificationLocale": "en",
        "storageName": "[toLower(concat(uniqueString(resourceGroup().id), 'diag'))]",
        "storageId": "[resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts', variables('storageName'))]",
        "diagnosticsStorageAccountName": "[variables('storageName')]",
        "diagnosticsStorageAccountId": "[variables('storageId')]",
        "diagnosticsStorageAccountType": "Standard_LRS",
        "diagnosticsStorageAccountKind": "Storage",
		"customScript": "ubuntuConfig.bash",
        "thisTemplateUri": "[deployment().properties.templateLink.uri]",
        "customScriptUri": "[uri(variables('thisTemplateUri'), variables('customScript'))]",
        "customScriptCmd": "[concat('chmod 666 ', variables('customScript'), ' && /bin/sh ./', variables('customScript'))]"	
    },
    "resources": [
        {
            "comments": "Create NIC for VM",
            "name": "[variables('vmNicName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('vmNsgName')]",
                "[variables('vmPipName')]",
                "[parameters('vnetName')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')), '/subnets/', parameters('subnetName'))]"
                            },
                            "privateIPAllocationMethod": "dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('vmPipName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('vmNsgId')]"
                }
            },
            "tags": {}
        },	
        {
            "comments": "NSG allowing port 22 for VM",
            "name": "[variables('vmNsgName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": "[variables('vmNsgRules')]"
            },
            "tags": {}
        },
        {
            "comments": "PIP for the VM",
            "name": "[variables('vmPipName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIpAllocationMethod": "[variables('pipType')]"
            },
            "sku": {
                "name": "[variables('pipSku')]"
            },
            "tags": {}
        },
        {
            "comments": "Deploy Linux VM",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('vmName')]",
            "apiVersion": "[variables('computeApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('skuData')['publisher']]",
                        "offer": "[variables('skuData')['offer']]",
                        "sku": "[variables('skuData')['sku']]",
                        "version": "[variables('skuData')['version']]"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "caching": "ReadWrite",
                        "name": "[variables('vmDiskName')]",
                        "diskSizeGb": "[variables('vmOsDiskSize')]",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('vmDiskType')]"
                        }
                        },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false
                    },
                    "secrets": [],
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNicName'))]",
                            "properties": {
                                "primary": true
                            }
                        }
                    ]
                }
            },
            "resources": [],
            "dependsOn": [
                "[variables('vmNicName')]"
            ]
        }, 
        {
            "comments": "Shutdown schedule for VM",
            "name": "[concat('shutdown-computevm-', parameters('vmName'))]",
            "type": "Microsoft.DevTestLab/schedules",
            "apiVersion": "2017-04-26-preview",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
            ],
            "properties": {
                "status": "[variables('autoShutdownStatus')]",
                "taskType": "ComputeVmShutdownTask",
                "dailyRecurrence": {
                    "time": "[variables('autoShutdownTime')]"
                },
                "timeZoneId": "[variables('autoShutdownTimeZone')]",
                "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]",
                "notificationSettings": {
                    "status": "[variables('autoShutdownNotificationStatus')]",
                    "notificationLocale": "[variables('autoShutdownNotificationLocale')]",
                    "timeInMinutes": "30"
                }
            },
            "tags": {}
        }, 
		{
			"comments": "Create Linux custom extension to install software in the VM",
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(parameters('vmName'), '/installcustomscript')]",
			"apiVersion": "[variables('computeApiVersion')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"publisher": "Microsoft.Azure.Extensions",
				"type": "CustomScript",
				"typeHandlerVersion": "2.0",
				"autoUpgradeMinorVersion": true,
				"settings": {
					"fileUris": [
						"[variables('customScriptUri')]"
					],
					"commandToExecute": "[variables('customScriptCmd')]"
				}
			},
			"dependsOn": [
				"[parameters('vmName')]"
			]
        }
    ]
}