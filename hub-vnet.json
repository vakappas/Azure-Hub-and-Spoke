{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vnetName": {
            "defaultValue": "myVnet",
            "type": "string"
        },
        "vnetPrefix": {
            "defaultValue": "192.168.100.0/24",
            "type": "string"
        },
        "subnet1Name": {
            "defaultValue": "subnet1",
            "type": "string"
        },
        "subnet1Prefix": {
            "defaultValue": "192.168.100.0/26",
            "type": "string"
        },
        "subnet2Name": {
            "defaultValue": "subnet2",
            "type": "string"
        },
        "subnet2Prefix": {
            "defaultValue": "192.168.100.64/26",
            "type": "string"
        },
        "subnet3Name": {
            "defaultValue": "subnet2",
            "type": "string"
        },
        "subnet3Prefix": {
            "defaultValue": "192.168.100.64/26",
            "type": "string"
        },
        "routetablename":{
            "type": "string",
            "defaultValue": "Subnet2-RT"
        },
        "nvaName": {
            "type": "string",
            "defaultValue": "myCsr"
        },
        "nvaSize": {
            "type": "string",
            "defaultValue": "Standard_D2_v2"
        },
        "csr-lan-ip": {
            "type": "string",
            "defaultValue": "192.168.100.4"
        },
        "csr-lan-ip-2": {
            "type": "string",
            "defaultValue": "192.168.100.4"
        },         
        "vmName": {
            "type": "string",
            "defaultValue": "myVm"
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_B1s"
        },
        "vm-lan-ip": {
            "type": "string",
            "defaultValue": "192.168.100.11"
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "lab-user"
        },
        "adminPassword": {
            "type": "secureString"
        }
    },
    "variables": {
        "networkApiVersion": "2018-04-01",
        "computeApiVersion": "2018-06-01",
        "storageApiVersion": "2018-07-01",
        "nvaPipName": "[concat(parameters('nvaName'), '-pip')]",
        "vmPipName": "[concat(parameters('vmName'), '-pip1')]",
        "pipType": "Static",
        "pipSku": "Basic",
        "nvaNic1Name": "[concat(parameters('nvaName'), '-nic1')]",
		"nvaNic2Name": "[concat(parameters('nvaName'), '-nic2')]",
        "vmNicName": "[concat(parameters('vmName'), '-nic1')]",
        "nvaNsgName": "[concat(parameters('nvaName'), '-nsg')]",
        "vmNsgName": "[concat(parameters('vmName'), '-nsg1')]",
        "nvaNsgRules": [
            {
                "name": "SSH",
                "properties": {
                    "priority": 1010,
                    "protocol": "TCP",
                    "access": "Allow",
                    "direction": "Inbound",
                    "sourceApplicationSecurityGroups": [],
                    "destinationApplicationSecurityGroups": [],
                    "sourceAddressPrefix": "*",
                    "sourcePortRange": "*",
                    "destinationAddressPrefix": "*",
                    "destinationPortRange": "22"
                }
            }
        ],
        "vmNsgRules": [
            {
                "name": "SSH",
                "properties": {
                    "priority": 1010,
                    "protocol": "TCP",
                    "access": "Allow",
                    "direction": "Inbound",
                    "sourceApplicationSecurityGroups": [],
                    "destinationApplicationSecurityGroups": [],
                    "sourceAddressPrefix": "*",
                    "sourcePortRange": "*",
                    "destinationAddressPrefix": "*",
                    "destinationPortRange": "22"
                }
            },
            {
                "name": "HTTP",
                "properties": {
                    "priority": 1020,
                    "protocol": "TCP",
                    "access": "Allow",
                    "direction": "Inbound",
                    "sourceApplicationSecurityGroups": [],
                    "destinationApplicationSecurityGroups": [],
                    "sourceAddressPrefix": "*",
                    "sourcePortRange": "*",
                    "destinationAddressPrefix": "*",
                    "destinationPortRange": "80"
                }
            }
        ],
        "nvaNsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('nvaNsgName'))]",
        "vmNsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('vmNsgName'))]",
        "vmDiskName": "[concat(parameters('vmName'), '-disk')]",
		"vmDiskType": "Standard_LRS",
		"vmOsDiskSize": 32,
        "nvaOsDiskType": "StandardSSD_LRS",
        "vnetId": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
        "subnet1Ref": "[concat(variables('vnetId'), '/subnets/', parameters('subnet1Name'))]",
        "subnet2Ref": "[concat(variables('vnetId'), '/subnets/', parameters('subnet2Name'))]",
        "autoShutdownStatus": "Enabled",
        "autoShutdownTime": "19:00",
        "autoShutdownTimeZone": "Eastern Standard Time",
        "autoShutdownNotificationStatus": "Disabled",
        "autoShutdownNotificationLocale": "en",
        "storageName": "[toLower(concat(uniqueString(resourceGroup().id), 'diag'))]",
        "storageId": "[resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts', variables('storageName'))]",
        "diagnosticsStorageAccountName": "[variables('storageName')]",
        "diagnosticsStorageAccountId": "[variables('storageId')]",
        "diagnosticsStorageAccountType": "Standard_LRS",
        "diagnosticsStorageAccountKind": "Storage",
		"customScript": "ubuntuConfig.bash",
        "thisTemplateUri": "[deployment().properties.templateLink.uri]",
        "customScriptUri": "[uri(variables('thisTemplateUri'), variables('customScript'))]",
        "customScriptCmd": "[concat('chmod 666 ', variables('customScript'), ' && /bin/sh ./', variables('customScript'))]"
   },
    "resources": [
        {
            "comments": "Create Vnet with two subnets",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('vnetName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnet1Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet1Prefix')]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', concat(parameters('routetablename'), '-rt'))]"            
                          }
                        }
                    },
                    {
                        "name": "[parameters('subnet2Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet2Prefix')]"
                        }
                    }
				]
            },
            "resources": [],
            "dependsOn": [
                "[concat('Microsoft.Network/routeTables/', parameters('routetablename'), '-rt')]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('nvaNsgName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('vmNsgName'))]"
            ]
        },
        {
            "comments": "Storage Account for diagnostics",
            "name": "[variables('storageName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "[variables('storageApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {},
            "kind": "[variables('diagnosticsStorageAccountKind')]",
            "sku": {
                "name": "[variables('diagnosticsStorageAccountType')]"
            },
            "tags": {}
        },
        {
            "comments": "Create NIC1 for CSR",
            "name": "[variables('nvaNic1Name')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('nvaNsgName')]",
                "[variables('nvaPipName')]",
                "[parameters('vnetName')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnet2Ref')]"
                            },
							"primary": true,
                            "privateIPAddressVersion": "IPv4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('nvaPipName'))]"
                            }
                        }
                    }
                ],
				 "enableAcceleratedNetworking": false,
                "enableIPForwarding": true,
                "primary": true,
                "tapConfigurations": [],
				
                "networkSecurityGroup": {
                    "id": "[variables('nvaNsgId')]"
                }
            },
            "tags": {}
        },
        {
            "comments": "Create NIC2 for CSR",
            "name": "[variables('nvaNic2Name')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('nvaNsgName')]",
                "[parameters('vnetName')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig2",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnet1Ref')]"
                            },
							"primary": true,
                            "privateIPAddressVersion": "IPv4",
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('csr-lan-ip')]"
                        }
                    },
                    {
                        "name": "ipconfig3",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnet1Ref')]"
                            },
							"primary": false,
                            "privateIPAddressVersion": "IPv4",
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('csr-lan-ip-2')]"
                        }
                    }
                ],
				 "enableAcceleratedNetworking": false,
                "enableIPForwarding": true,
                "primary": true,
                "tapConfigurations": [],
				
                "networkSecurityGroup": {
                    "id": "[variables('nvaNsgId')]"
                }
            },
            "tags": {}
        },
        {
            "comments": "NSG allowing port 22 for CSR",
            "name": "[variables('nvaNsgName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": "[variables('nvaNsgRules')]"
            },
            "tags": {}
        },
        {
            "comments": "PIP for the NVA",
            "name": "[variables('nvaPipName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIpAllocationMethod": "[variables('pipType')]"
            },
            "sku": {
                "name": "[variables('pipSku')]"
            },
            "tags": {}
        },
        {
            "comments": "Cisco CSR 1000v NVA",
            "name": "[parameters('nvaName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "[variables('computeApiVersion')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('nvaNic1Name')]",
                "[variables('nvaNic2Name')]",
                "[variables('storageName')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('nvaSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('nvaOsDiskType')]"
                        }
                    },
                    "imageReference": {
                        "publisher": "cisco",
                        "offer": "cisco-csr-1000v",
                        "sku": "16_9-byol",
                        "version": "16.9.120180924"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nvaNic1Name'))]",
                            "properties": {
                                "primary": true
                            }
                        },
                        {

							"id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nvaNic2Name'))]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('nvaName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', variables('diagnosticsStorageAccountName'), '.blob.core.windows.net/')]"
                    }
                }
            },
            "plan": {
                "name": "16_9-byol",
                "publisher": "cisco",
                "product": "cisco-csr-1000v"
            },
            "tags": {}
        },
        {
            "comments": "Shutdown schedule for CSR",
            "name": "[concat('shutdown-computevm-', parameters('nvaName'))]",
            "type": "Microsoft.DevTestLab/schedules",
            "apiVersion": "2017-04-26-preview",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('nvaName'))]"
            ],
            "properties": {
                "status": "[variables('autoShutdownStatus')]",
                "taskType": "ComputeVmShutdownTask",
                "dailyRecurrence": {
                    "time": "[variables('autoShutdownTime')]"
                },
                "timeZoneId": "[variables('autoShutdownTimeZone')]",
                "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('nvaName'))]",
                "notificationSettings": {
                    "status": "[variables('autoShutdownNotificationStatus')]",
                    "notificationLocale": "[variables('autoShutdownNotificationLocale')]",
                    "timeInMinutes": "30"
                }
            },
            "tags": {}
        },
        {
            "comments": "Create NIC for VM",
            "name": "[variables('vmNicName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('vmNsgName')]",
                "[variables('vmPipName')]",
                "[parameters('vnetName')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnet1Ref')]"
                            },
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('vm-lan-ip')]",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('vmPipName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('vmNsgId')]"
                }
            },
            "tags": {}
        },	
        {
            "comments": "NSG allowing port 22 for VM",
            "name": "[variables('vmNsgName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": "[variables('vmNsgRules')]"
            },
            "tags": {}
        },
        {
            "comments": "PIP for the VM",
            "name": "[variables('vmPipName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIpAllocationMethod": "[variables('pipType')]"
            },
            "sku": {
                "name": "[variables('pipSku')]"
            },
            "tags": {}
        },
        {
            "comments": "Deploy Linux VM1",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('vmName')]",
            "apiVersion": "[variables('computeApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "caching": "ReadWrite",
                        "name": "[variables('vmDiskName')]",
                        "diskSizeGb": "[variables('vmOsDiskSize')]",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('vmDiskType')]"
                        }
                        },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false
                    },
                    "secrets": [],
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNicName'))]",
                            "properties": {
                                "primary": true
                            }
                        }
                    ]
                }
            },
            "resources": [],
            "dependsOn": [
                "[variables('vmNicName')]"
            ]
        }, 
        {
            "comments": "Shutdown schedule for VM",
            "name": "[concat('shutdown-computevm-', parameters('vmName'))]",
            "type": "Microsoft.DevTestLab/schedules",
            "apiVersion": "2017-04-26-preview",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
            ],
            "properties": {
                "status": "[variables('autoShutdownStatus')]",
                "taskType": "ComputeVmShutdownTask",
                "dailyRecurrence": {
                    "time": "[variables('autoShutdownTime')]"
                },
                "timeZoneId": "[variables('autoShutdownTimeZone')]",
                "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]",
                "notificationSettings": {
                    "status": "[variables('autoShutdownNotificationStatus')]",
                    "notificationLocale": "[variables('autoShutdownNotificationLocale')]",
                    "timeInMinutes": "30"
                }
            },
            "tags": {}
        }, 
		{
			"comments": "Create Linux custom extension to install software in the VM",
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(parameters('vmName'), '/installcustomscript')]",
			"apiVersion": "[variables('computeApiVersion')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"publisher": "Microsoft.Azure.Extensions",
				"type": "CustomScript",
				"typeHandlerVersion": "2.0",
				"autoUpgradeMinorVersion": true,
				"settings": {
					"fileUris": [
						"[variables('customScriptUri')]"
					],
					"commandToExecute": "[variables('customScriptCmd')]"
				}
			},
			"dependsOn": [
				"[parameters('vmName')]"
			]
        },
        {
            "comments": "Route Table that has to be assigned to Inside subnet",
            "type": "Microsoft.Network/routeTables",      
            "name": "[concat(parameters('routetablename'),'-rt')]",      
            "apiVersion": "2018-08-01",      
            "location": "[resourceGroup().location]",      
            "properties": {      
              "routes": [      
                {      
                  "name": "[parameters('routetablename')]",      
                  "properties": {      
                    "addressPrefix": "[concat(parameters('vm-lan-ip'), '/32')]",      
                    "nextHopType": "VirtualAppliance",      
                    "nextHopIpAddress": "[parameters('csr-lan-ip')]"      
                  }     
                }      
              ]      
            }   
        }
     ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
}
