{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vnetName": {
            "defaultValue": "spoke-net",
            "type": "string"
        },
        "vnetPrefix": {
            "defaultValue": "192.168.100.0/24",
            "type": "string"
        },
        "subnet1Name": {
            "defaultValue": "subnet1",
            "type": "string"
        },
        "subnet1Prefix": {
            "defaultValue": "192.168.100.0/26",
            "type": "string"
        },
        "subnet2Name": {
            "defaultValue": "subnet2",
            "type": "string"
        },
        "subnet2Prefix": {
            "defaultValue": "192.168.100.64/26",
            "type": "string"
        },
        "subnet3Name": {
            "defaultValue": "subnet3",
            "type": "string"
        },
        "subnet3Prefix": {
            "defaultValue": "192.168.100.128/26",
            "type": "string"
        },
        "vmName": {
            "type": "string",
            "defaultValue": "myVm"
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_B1s"
        },
        "vm-lan-ip": {
            "type": "string",
            "defaultValue": "192.168.100.11"
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "lab-user"
        },
        "adminPassword": {
            "type": "secureString"
        }
    },
    "variables": {
        "networkApiVersion": "2018-04-01",
        "computeApiVersion": "2018-06-01",
        "storageApiVersion": "2018-07-01",
        "deploymentApiVersion": "2017-05-10",
        "vmTemplateUri": "[uri(deployment().properties.templateLink.uri, 'linuxVM.json')]",
        "vmPipName": "[concat(parameters('vmName'), '-pip1')]",
        "pipType": "Static",
        "pipSku": "Basic",
        "vmNicName": "[concat(parameters('vmName'), '-nic1')]",
        "vmNsgName": "[concat(parameters('vmName'), '-nsg')]",
        "vmNsgRules": [
            {
                "name": "SSH",
                "properties": {
                    "priority": 1010,
                    "protocol": "TCP",
                    "access": "Allow",
                    "direction": "Inbound",
                    "sourceApplicationSecurityGroups": [],
                    "destinationApplicationSecurityGroups": [],
                    "sourceAddressPrefix": "*",
                    "sourcePortRange": "*",
                    "destinationAddressPrefix": "*",
                    "destinationPortRange": "22"
                }
            },
            {
                "name": "HTTP",
                "properties": {
                    "priority": 1020,
                    "protocol": "TCP",
                    "access": "Allow",
                    "direction": "Inbound",
                    "sourceApplicationSecurityGroups": [],
                    "destinationApplicationSecurityGroups": [],
                    "sourceAddressPrefix": "*",
                    "sourcePortRange": "*",
                    "destinationAddressPrefix": "*",
                    "destinationPortRange": "80"
                }
            }
        ],
        "vmNsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('vmNsgName'))]",
        "vmDiskName": "[concat(parameters('vmName'), '-disk')]",
		"vmDiskType": "Standard_LRS",
		"vmOsDiskSize": 32,
        "vnetId": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
        "subnet1Ref": "[concat(variables('vnetId'), '/subnets/', parameters('subnet1Name'))]",
        "subnet2Ref": "[concat(variables('vnetId'), '/subnets/', parameters('subnet2Name'))]",
        "subnet3Ref": "[concat(variables('vnetId'), '/subnets/', parameters('subnet2Name'))]",
        "autoShutdownStatus": "Enabled",
        "autoShutdownTime": "19:00",
        "autoShutdownTimeZone": "Eastern Standard Time",
        "autoShutdownNotificationStatus": "Disabled",
        "autoShutdownNotificationLocale": "en",
        "storageName": "[toLower(concat(uniqueString(resourceGroup().id), 'diag'))]",
        "storageId": "[resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts', variables('storageName'))]",
        "diagnosticsStorageAccountName": "[variables('storageName')]",
        "diagnosticsStorageAccountId": "[variables('storageId')]",
        "diagnosticsStorageAccountType": "Standard_LRS",
        "diagnosticsStorageAccountKind": "Storage",
		"customScript": "ubuntuConfig.bash",
        "thisTemplateUri": "[deployment().properties.templateLink.uri]",
        "customScriptUri": "[uri(variables('thisTemplateUri'), variables('customScript'))]",
        "customScriptCmd": "[concat('chmod 666 ', variables('customScript'), ' && /bin/sh ./', variables('customScript'))]"
   },
    "resources": [
        {
            "comments": "Create Vnet with three subnets",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('vnetName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnet1Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet1Prefix')]"                            
                        }
                    },
                    {
                        "name": "[parameters('subnet2Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet2Prefix')]"
                        }
                    },
                    {
                        "name": "[parameters('subnet3Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet3Prefix')]"
                        }
                    }
				]
            },
            "resources": [],
            "dependsOn": [
            ]
        },
        {
			"comments": "Create an Ubuntu VM and connect it to a given vnet and subnet",
			"name": "Ubuntu VM",
            "type": "Microsoft.Resources/deployments",
			"apiVersion": "[variables('deploymentApiVersion')]",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('vmTemplateUri')]",
					"contentVersion": "1.0.0.0"
				},
				 "parameters": {
                    "adminUsername": {"value": "[parameters('adminUsername')]"},
                    "adminPassword": {"value": "[parameters('adminPassword')]"},
                    "vnetName": {"value": "[parameters('vnetName')]"},
                    "subnetName": { "value": "[parameters('subnet1Name')]"},
                    "vmName": {"value": "[concat(parameters('vmName'), '1')]"},
                    "vmSize": {"value": "[parameters('vmSize')]"}
                }
            },
            "dependsOn": [
            ]
        }
     ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
}
